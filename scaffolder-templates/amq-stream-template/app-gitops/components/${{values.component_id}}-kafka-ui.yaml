kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${{ values.component_id }}-kafka-ui
  namespace: ${{values.application.split(":")[1]}}-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ values.component_id }}-kafka-ui
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ${{ values.component_id }}-kafka-ui
    spec:
      containers:
        - name: ${{ values.component_id }}-kafka-ui
          image: 'provectuslabs/kafka-ui:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: '${{ values.component_id }}-kafka-bootstrap:9092'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: ${{ values.component_id }}-kafka-ui
  namespace: ${{values.application.split(":")[1]}}-dev
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: ${{ values.component_id }}-kafka-ui
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: ${{ values.component_id }}-kafka-ui
  namespace: ${{values.application.split(":")[1]}}-dev
spec:
  to:
    kind: Service
    name: ${{ values.component_id }}-kafka-ui
    weight: 100
  port:
    targetPort: 8080